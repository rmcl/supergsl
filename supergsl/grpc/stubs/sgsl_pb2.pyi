"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import builtins
import concurrent.futures
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.service
import google.protobuf.struct_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class CreateCompilerSessionRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___CreateCompilerSessionRequest = CreateCompilerSessionRequest

class CreateCompilerSessionResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SESSION_IDENTIFIER_FIELD_NUMBER: builtins.int
    session_identifier: typing.Text = ...
    def __init__(self,
        *,
        session_identifier : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"session_identifier",b"session_identifier"]) -> None: ...
global___CreateCompilerSessionResult = CreateCompilerSessionResult

class DestroyCompilerSessionRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___DestroyCompilerSessionRequest = DestroyCompilerSessionRequest

class DestroyCompilerSessionResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SUCCESS_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    success: builtins.bool = ...
    error: typing.Text = ...
    def __init__(self,
        *,
        success : builtins.bool = ...,
        error : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"error",b"error",u"success",b"success"]) -> None: ...
global___DestroyCompilerSessionResult = DestroyCompilerSessionResult

class CompileRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SESSION_IDENTIFIER_FIELD_NUMBER: builtins.int
    SOURCE_CODE_FIELD_NUMBER: builtins.int
    session_identifier: typing.Text = ...
    source_code: typing.Text = ...
    def __init__(self,
        *,
        session_identifier : typing.Text = ...,
        source_code : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"session_identifier",b"session_identifier",u"source_code",b"source_code"]) -> None: ...
global___CompileRequest = CompileRequest

class CompileResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SUCCESS_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    success: builtins.bool = ...
    error: typing.Text = ...
    def __init__(self,
        *,
        success : builtins.bool = ...,
        error : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"error",b"error",u"success",b"success"]) -> None: ...
global___CompileResult = CompileResult

class ListSymbolTableRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SESSION_IDENTIFIER_FIELD_NUMBER: builtins.int
    session_identifier: typing.Text = ...
    def __init__(self,
        *,
        session_identifier : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"session_identifier",b"session_identifier"]) -> None: ...
global___ListSymbolTableRequest = ListSymbolTableRequest

class ListSymbolTableResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class SymbolsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___Symbol: ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Optional[global___Symbol] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal[u"value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal[u"key",b"key",u"value",b"value"]) -> None: ...

    SYMBOLS_FIELD_NUMBER: builtins.int
    @property
    def symbols(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___Symbol]: ...
    def __init__(self,
        *,
        symbols : typing.Optional[typing.Mapping[typing.Text, global___Symbol]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"symbols",b"symbols"]) -> None: ...
global___ListSymbolTableResult = ListSymbolTableResult

class Symbol(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    TYPE_FIELD_NUMBER: builtins.int
    DETAILS_FIELD_NUMBER: builtins.int
    type: typing.Text = ...
    @property
    def details(self) -> google.protobuf.struct_pb2.Struct: ...
    def __init__(self,
        *,
        type : typing.Text = ...,
        details : typing.Optional[google.protobuf.struct_pb2.Struct] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"details",b"details"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"details",b"details",u"type",b"type"]) -> None: ...
global___Symbol = Symbol

class SequenceSlice(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___SequenceSlice = SequenceSlice

class Role(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    URI_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    uri: typing.Text = ...
    name: typing.Text = ...
    description: typing.Text = ...
    def __init__(self,
        *,
        uri : typing.Text = ...,
        name : typing.Text = ...,
        description : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"description",b"description",u"name",b"name",u"uri",b"uri"]) -> None: ...
global___Role = Role

class SequenceEntry(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    IDENTIFIER_FIELD_NUMBER: builtins.int
    IS_COMPOSITE_FIELD_NUMBER: builtins.int
    ROLES_FIELD_NUMBER: builtins.int
    LINKS_FIELD_NUMBER: builtins.int
    SEQUENCE_FIELD_NUMBER: builtins.int
    identifier: typing.Text = ...
    is_composite: builtins.bool = ...
    @property
    def roles(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Role]: ...
    @property
    def links(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SequenceLink]: ...
    sequence: typing.Text = ...
    def __init__(self,
        *,
        identifier : typing.Text = ...,
        is_composite : builtins.bool = ...,
        roles : typing.Optional[typing.Iterable[global___Role]] = ...,
        links : typing.Optional[typing.Iterable[global___SequenceLink]] = ...,
        sequence : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"identifier",b"identifier",u"is_composite",b"is_composite",u"links",b"links",u"roles",b"roles",u"sequence",b"sequence"]) -> None: ...
global___SequenceEntry = SequenceEntry

class SequenceLink(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PARENT_ENTRY_IDENTIFIER_FIELD_NUMBER: builtins.int
    CHILD_ENTRY_IDENTIFIER_FIELD_NUMBER: builtins.int
    SOURCE_SLICE_FIELD_NUMBER: builtins.int
    TARGET_SLICE_FIELD_NUMBER: builtins.int
    ROLES_FIELD_NUMBER: builtins.int
    parent_entry_identifier: typing.Text = ...
    child_entry_identifier: typing.Text = ...
    # Todo: We may want to simplify things for the client by making these
    # "absolute" positions in the source or target sequence.
    @property
    def source_slice(self) -> global___SequenceSlice: ...
    @property
    def target_slice(self) -> global___SequenceSlice: ...
    @property
    def roles(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Role]: ...
    def __init__(self,
        *,
        parent_entry_identifier : typing.Text = ...,
        child_entry_identifier : typing.Text = ...,
        source_slice : typing.Optional[global___SequenceSlice] = ...,
        target_slice : typing.Optional[global___SequenceSlice] = ...,
        roles : typing.Optional[typing.Iterable[global___Role]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"source_slice",b"source_slice",u"target_slice",b"target_slice"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"child_entry_identifier",b"child_entry_identifier",u"parent_entry_identifier",b"parent_entry_identifier",u"roles",b"roles",u"source_slice",b"source_slice",u"target_slice",b"target_slice"]) -> None: ...
global___SequenceLink = SequenceLink

class GetSequenceDetailRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SESSION_IDENTIFIER_FIELD_NUMBER: builtins.int
    SEQUENCE_IDENTIFIER_FIELD_NUMBER: builtins.int
    INCLUDE_SEQUENCE_FIELD_NUMBER: builtins.int
    session_identifier: typing.Text = ...
    sequence_identifier: typing.Text = ...
    include_sequence: builtins.bool = ...
    def __init__(self,
        *,
        session_identifier : typing.Text = ...,
        sequence_identifier : typing.Text = ...,
        include_sequence : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"include_sequence",b"include_sequence",u"sequence_identifier",b"sequence_identifier",u"session_identifier",b"session_identifier"]) -> None: ...
global___GetSequenceDetailRequest = GetSequenceDetailRequest

class GetSequenceDetailResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SEQUENCE_ENTRY_FIELD_NUMBER: builtins.int
    @property
    def sequence_entry(self) -> global___SequenceEntry: ...
    def __init__(self,
        *,
        sequence_entry : typing.Optional[global___SequenceEntry] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"sequence_entry",b"sequence_entry"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"sequence_entry",b"sequence_entry"]) -> None: ...
global___GetSequenceDetailResult = GetSequenceDetailResult

class FunctionCallIdentifier(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    IDENTIFIER_FIELD_NUMBER: builtins.int
    identifier: typing.Text = ...
    def __init__(self,
        *,
        identifier : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"identifier",b"identifier"]) -> None: ...
global___FunctionCallIdentifier = FunctionCallIdentifier

class MessageFunctionArguments(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NAME_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    def __init__(self,
        *,
        name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"name",b"name"]) -> None: ...
global___MessageFunctionArguments = MessageFunctionArguments

class FunctionReturnValue(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    VALUE_FIELD_NUMBER: builtins.int
    value: typing.Text = ...
    def __init__(self,
        *,
        value : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"value",b"value"]) -> None: ...
global___FunctionReturnValue = FunctionReturnValue

class SetFunctionReturnValueResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RECEIVED_FIELD_NUMBER: builtins.int
    received: builtins.bool = ...
    def __init__(self,
        *,
        received : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"received",b"received"]) -> None: ...
global___SetFunctionReturnValueResponse = SetFunctionReturnValueResponse

class SuperGSLCompiler(google.protobuf.service.Service, metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def CreateCompilerSession(self,
        rpc_controller: google.protobuf.service.RpcController,
        request: global___CreateCompilerSessionRequest,
        done: typing.Optional[typing.Callable[[global___CreateCompilerSessionResult], None]],
    ) -> concurrent.futures.Future[global___CreateCompilerSessionResult]: ...
    @abc.abstractmethod
    def DestroyCompilerSession(self,
        rpc_controller: google.protobuf.service.RpcController,
        request: global___DestroyCompilerSessionRequest,
        done: typing.Optional[typing.Callable[[global___DestroyCompilerSessionResult], None]],
    ) -> concurrent.futures.Future[global___DestroyCompilerSessionResult]: ...
    @abc.abstractmethod
    def Compile(self,
        rpc_controller: google.protobuf.service.RpcController,
        request: global___CompileRequest,
        done: typing.Optional[typing.Callable[[global___CompileResult], None]],
    ) -> concurrent.futures.Future[global___CompileResult]: ...
    @abc.abstractmethod
    def ListSymbolTable(self,
        rpc_controller: google.protobuf.service.RpcController,
        request: global___ListSymbolTableRequest,
        done: typing.Optional[typing.Callable[[global___ListSymbolTableResult], None]],
    ) -> concurrent.futures.Future[global___ListSymbolTableResult]: ...
    @abc.abstractmethod
    def GetSequenceDetail(self,
        rpc_controller: google.protobuf.service.RpcController,
        request: global___GetSequenceDetailRequest,
        done: typing.Optional[typing.Callable[[global___GetSequenceDetailResult], None]],
    ) -> concurrent.futures.Future[global___GetSequenceDetailResult]: ...
    @abc.abstractmethod
    def GetFunctionArguments(self,
        rpc_controller: google.protobuf.service.RpcController,
        request: global___FunctionCallIdentifier,
        done: typing.Optional[typing.Callable[[global___MessageFunctionArguments], None]],
    ) -> concurrent.futures.Future[global___MessageFunctionArguments]: ...
    @abc.abstractmethod
    def SetFunctionReturnValue(self,
        rpc_controller: google.protobuf.service.RpcController,
        request: global___FunctionReturnValue,
        done: typing.Optional[typing.Callable[[global___SetFunctionReturnValueResponse], None]],
    ) -> concurrent.futures.Future[global___SetFunctionReturnValueResponse]: ...
class SuperGSLCompiler_Stub(SuperGSLCompiler):
    def __init__(self, rpc_channel: google.protobuf.service.RpcChannel) -> None: ...
    def CreateCompilerSession(self,
        rpc_controller: google.protobuf.service.RpcController,
        request: global___CreateCompilerSessionRequest,
        done: typing.Optional[typing.Callable[[global___CreateCompilerSessionResult], None]],
    ) -> concurrent.futures.Future[global___CreateCompilerSessionResult]: ...
    def DestroyCompilerSession(self,
        rpc_controller: google.protobuf.service.RpcController,
        request: global___DestroyCompilerSessionRequest,
        done: typing.Optional[typing.Callable[[global___DestroyCompilerSessionResult], None]],
    ) -> concurrent.futures.Future[global___DestroyCompilerSessionResult]: ...
    def Compile(self,
        rpc_controller: google.protobuf.service.RpcController,
        request: global___CompileRequest,
        done: typing.Optional[typing.Callable[[global___CompileResult], None]],
    ) -> concurrent.futures.Future[global___CompileResult]: ...
    def ListSymbolTable(self,
        rpc_controller: google.protobuf.service.RpcController,
        request: global___ListSymbolTableRequest,
        done: typing.Optional[typing.Callable[[global___ListSymbolTableResult], None]],
    ) -> concurrent.futures.Future[global___ListSymbolTableResult]: ...
    def GetSequenceDetail(self,
        rpc_controller: google.protobuf.service.RpcController,
        request: global___GetSequenceDetailRequest,
        done: typing.Optional[typing.Callable[[global___GetSequenceDetailResult], None]],
    ) -> concurrent.futures.Future[global___GetSequenceDetailResult]: ...
    def GetFunctionArguments(self,
        rpc_controller: google.protobuf.service.RpcController,
        request: global___FunctionCallIdentifier,
        done: typing.Optional[typing.Callable[[global___MessageFunctionArguments], None]],
    ) -> concurrent.futures.Future[global___MessageFunctionArguments]: ...
    def SetFunctionReturnValue(self,
        rpc_controller: google.protobuf.service.RpcController,
        request: global___FunctionReturnValue,
        done: typing.Optional[typing.Callable[[global___SetFunctionReturnValueResponse], None]],
    ) -> concurrent.futures.Future[global___SetFunctionReturnValueResponse]: ...